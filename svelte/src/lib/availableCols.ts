import { type Col } from '../internal';

export const availableCols: Record<string, Col> = {
  ix: {
    colId: 'ix',
    displayName: '#',
    dbCols: ['ix'],
    sortCols: ['ix'],
    truncatable: false,
    aggregatable: false,
    visibleByDefault: false,
  },
  id: {
    colId: 'id',
    displayName: 'ID',
    dbCols: ['id'],
    sortCols: ['id'],
    truncatable: false,
    aggregatable: false,
    visibleByDefault: false,
  },
  cached: {
    colId: 'cached',
    displayName: 'Cached',
    dbCols: [],
    sortCols: [],
    truncatable: false,
    aggregatable: false,
    visibleByDefault: true,
  },
  title: {
    colId: 'title',
    displayName: 'Title',
    dbCols: ['title'],
    sortCols: ['titleCanon'],
    truncatable: true,
    aggregatable: false,
    visibleByDefault: true,
  },
  artist: {
    colId: 'artist',
    displayName: 'Artist',
    dbCols: ['artist', 'albumArtist'],
    sortCols: ['albumArtistCanon', 'albumCanon', 'discI', 'trackI'],
    truncatable: true,
    aggregatable: true,
    visibleByDefault: true,
  },
  album: {
    colId: 'album',
    displayName: 'Album',
    dbCols: ['album'],
    sortCols: ['albumCanon', 'albumArtistCanon', 'discI', 'trackI'],
    truncatable: true,
    aggregatable: true,
    visibleByDefault: true,
  },
  comments: {
    colId: 'comments',
    displayName: 'Comments',
    dbCols: ['comments'],
    sortCols: ['comments'],
    truncatable: true,
    aggregatable: false,
    visibleByDefault: false,
  },
  compilation: {
    colId: 'compilation',
    displayName: 'Compilation?',
    dbCols: ['compilation'],
    sortCols: ['compilation'],
    truncatable: false,
    aggregatable: false,
    visibleByDefault: false,
  },
  composer: {
    colId: 'composer',
    displayName: 'Composer',
    dbCols: ['composer'],
    sortCols: ['composer'],
    truncatable: true,
    aggregatable: true,
    visibleByDefault: false,
  },
  grouping: {
    colId: 'grouping',
    displayName: 'Grouping',
    dbCols: ['grouping'],
    sortCols: ['grouping', 'trackI'],
    truncatable: true,
    aggregatable: false,
    visibleByDefault: true,
  },
  disc: {
    colId: 'disc',
    displayName: 'Disc',
    dbCols: ['discI', 'discN'],
    sortCols: ['discI'],
    truncatable: false,
    aggregatable: false,
    visibleByDefault: true,
  },
  track: {
    colId: 'track',
    displayName: 'Track',
    dbCols: ['trackI', 'trackN'],
    sortCols: ['trackI'],
    truncatable: false,
    aggregatable: false,
    visibleByDefault: true,
  },
  duration: {
    colId: 'duration',
    displayName: 'Duration',
    dbCols: ['duration'],
    sortCols: ['duration'],
    truncatable: false,
    aggregatable: false,
    visibleByDefault: true,
  },
  rating: {
    colId: 'rating',
    displayName: 'Rating',
    dbCols: ['rating'],
    sortCols: ['rating'],
    truncatable: false,
    aggregatable: true,
    visibleByDefault: true,
  },
  genre: {
    colId: 'genre',
    displayName: 'Genre',
    dbCols: ['genre', 'genreCat', 'genreColor'],
    sortCols: ['genre', 'albumArtistCanon', 'albumCanon', 'discI', 'trackI'],
    truncatable: false,
    aggregatable: true,
    visibleByDefault: true,
  },
  year: {
    colId: 'year',
    displayName: 'Year',
    dbCols: ['year'],
    sortCols: ['year'],
    truncatable: false,
    aggregatable: false,
    visibleByDefault: false,
  },
  nPlays: {
    colId: 'nPlays',
    displayName: 'Plays',
    dbCols: ['nPlays'],
    sortCols: ['nPlays'],
    truncatable: false,
    aggregatable: false,
    visibleByDefault: true,
  },
  lastPlayed: {
    colId: 'lastPlayed',
    displayName: 'Last played',
    dbCols: ['lastPlayed'],
    sortCols: ['lastPlayed'],
    truncatable: false,
    aggregatable: false,
    visibleByDefault: true,
  },
  bitrate: {
    colId: 'bitrate',
    displayName: 'Bit rate',
    dbCols: ['bitrate'],
    sortCols: ['bitrate'],
    truncatable: false,
    aggregatable: false,
    visibleByDefault: false,
  },
  startAt: {
    colId: 'startAt',
    displayName: 'Start at',
    dbCols: ['startAt'],
    sortCols: ['startAt'],
    truncatable: false,
    aggregatable: false,
    visibleByDefault: false,
  },
  stopAt: {
    colId: 'stopAt',
    displayName: 'Stop at',
    dbCols: ['stopAt'],
    sortCols: ['stopAt'],
    truncatable: false,
    aggregatable: false,
    visibleByDefault: false,
  },
  fileSize: {
    colId: 'fileSize',
    displayName: 'File size',
    dbCols: ['fileSize'],
    sortCols: ['fileSize'],
    truncatable: false,
    aggregatable: false,
    visibleByDefault: false,
  },
  createdAt: {
    colId: 'createdAt',
    displayName: 'Created at',
    dbCols: ['createdAt'],
    sortCols: ['createdAt'],
    truncatable: false,
    aggregatable: false,
    visibleByDefault: false,
  },
  updatedAt: {
    colId: 'updatedAt',
    displayName: 'Updated at',
    dbCols: ['updatedAt'],
    sortCols: ['updatedAt'],
    truncatable: false,
    aggregatable: false,
    visibleByDefault: false,
  },
};

export const allDbCols = new Set<string>(
  Object.values(availableCols).reduce((acc: string[], x: Col): string[] => {
    acc = acc.concat(x.dbCols);
    return acc;
  }, [])
);

export const colIdsAlwaysShownInMobile = new Set<string>([
  'ix',
  'artist',
  'album',
  'disc',
  'track',
  'title',
  'duration',
  'rating',
  'cached',
]);
